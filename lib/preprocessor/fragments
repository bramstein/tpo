/*
    console.time('find styles');
    for (var i = 0; i < textNodes.length; i += 1) {
        var style = window.getComputedStyle(textNodes[i], null);
            fontFamily = style['fontFamily'],
            fontSize = style['fontSize'],
            fontStyle = style['fontStyle'] || 'normal',
            fontWeight = style['fontWeight'] || 'normal',
            fontVariant = style['fontVariant'] || 'normal',
            lineHeight = style['lineHeight'],
            textTransform = style['textTransform'] || 'none',
            textRendering = style['textRendering'] || 'optimizespeed';

        var hash = 'font:' + fontStyle + ' ' + fontVariant + ' ' + fontWeight + ' ' + fontSize + '/' + lineHeight + ' ' + fontFamily + ';text-transform:' + textTransform + ';text-rendering:' + textRendering;

        if (!rulers[hash]) {
            rulers[hash] = {};
        }

        function store(s) {
            if (rulers[hash][s]) {
                rulers[hash][s] += 1;
            } else {
                rulers[hash][s] = 1;
            }
        }

        var str = textNodes[i].textContent;

        while (str) {
            for (var j = 0; j < tokenKeys.length; j += 1) {
                var m = tokens[tokenKeys[j]].exec(str);

                if (m) {
                    var word = m[0];

                    for (var c = 0; c < word.length; c += 1) {
                        if (c === word.length - 1) {
                            store(word[c]);
                        } else {
                            store(word[c] + word[c + 1]);
                        }
                        store(word[c]);
                    }

                    str = str.substring(m[0].length);
                }
            }
        }


        if (!styles[hash]) {
            styles[hash] = {
                single: {},
                pair: {}
            };
        }
    }
    console.timeEnd('find styles');

    var newDiv = document.createElement('div');
    newDiv.classList.add('tpo-rulers');

    Object.keys(rulers).forEach(function(css) {
        var div = document.createElement('div');
        div.style.cssText = css;

        Object.keys(rulers[css]).forEach(function(c) {
            var span = document.createElement('span');
            span.style.position='absolute';
            span.style.display='inline-block';
            span.textContent = c;
            div.appendChild(span);
        });

        newDiv.appendChild(div);
    });

    document.body.appendChild(newDiv);
*/

    (function () {
        var characters = {};

        function store(s) {
            if (characters[s]) {
                characters[s] += 1;
            } else {
                characters[s] = 1;
            }
        }

        result.forEach(function(word) {
            for (var c = 0; c < word.length; c += 1) {
                if (c === word.length - 1) {
                    store(word[c]);
                } else {
                    store(word[c] + word[c + 1]);
                }
                store(word[c]);
            }
        });

        var div = document.createElement('div');

        Object.keys(characters).forEach(function(c) {
            var span = document.createElement('span');
            span.style.position='absolute';
            span.style.display='inline-block';
            span.textContent = c;
            div.appendChild(span);
        });

        document.body.appendChild(div);
    }());

    function getCharacters() {
        var result = {};

        function store(s) {
            if (result[s]) {
                result[s] += 1;
            } else {
                result[s] = 1;
            }
        }

        for (var i = 0; i < words.length; i += 1) {
            var word = words[i].textContent;

            for (var c = 0; c < word.length; c += 1) {
                if (c === word.length - 1) {
                    store(word[c] + ' ');
                } else {
                    store(word[c] + word[c + 1]);
                }
                store(word[c]);
            }
        }

        store[' '];

        return result;
    }

    var characters = Object.keys(getCharacters());


    fragment.appendChild(container);

    characters.forEach(function(c) {
        var span = window.document.createElement('span');
        span.style.position = 'relative';
        span.style.display = 'inline-block';

        if (c === ' ') {
            span.innerHTML = '&nbsp;';
        } else if (c[1] === ' ') {
            span.innerHTML = c[0] + '&nbsp;';
        } else {
            span.textContent = c;
        }

        container.appendChild(span);
    });

    document.body.appendChild(fragment);
